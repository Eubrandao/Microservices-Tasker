version: "3"
services:
  app1:
    build: ./tasks/ # caminho para o Dockerfile
    ports:
      - "3000:3000" # porta que voce configurou no Dockerfile
    volumes:
      - .:/usr/src/tasks
    command: npm start # comando que ira executar assim que subir o container

  app2:
    build: ./signup/ # caminho para o Dockerfile
    ports:
      - "3001:3001" # porta que voce configurou no Dockerfile
    volumes:
      - .:/usr/src/signup
    command: npm start # comando que ira executar assim que subir o container

  app3:
    build: ./email/ # caminho para o Dockerfile
    ports:
      - "3003:3003" # porta que voce configurou no Dockerfile
    volumes:
      - .:/usr/src/email
    command: npm start # comando que ira executar assim que subir o container

  app4:
    build: ./api-gateway/ # caminho para o Dockerfile
    ports:
      - "3004:3004" # porta que voce configurou no Dockerfile
    volumes:
      - .:/usr/src/api-gateway
    command: npm start # comando que ira executar assim que subir o container

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:2.11-1.1.1
    ports:
      - "9092:9092"
    links:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_CREATE_TOPICS: "topic-test:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
